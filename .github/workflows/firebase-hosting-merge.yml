# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: deploy to firebase hosting on merge
on:
  push:
    branches:
      - master

jobs:
  build-admin-panel:
    name: build-admin-panel
    runs-on: ubuntu-latest
    steps:
      # 1. copy code from repository to virtual machine of Github
      - name: copy code from repo to virtual machine
        uses: actions/checkout@v3

      # 2. install node at virtual machine with version 18, package manager "npm"
      - name: install npm at virtual machine
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # 3. install necessary dependencies at virtual machine
      - name: install necessary dependencies at virtual machine
        run: npm install

      # 4. run the build command and create a dist folder at virtual machine
      - name: run the build command and create a dist folder
        run: npm run build
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_MESSAGE_SENDER_ID: ${{ secrets.FIREBASE_MESSAGE_SENDER_ID }}

      # 5. archive production artifact
      - name: archive production artifact
        uses: actions/upload-artifact@master
        with: 
          name: dist
          path: dist


  deploy-admin-panel:
    name: deploy-admin-panel
    needs: build-admin-panel
    runs-on: ubuntu-latest
    steps: 
      # 1. copy code from repository to virtual machine of Github
      - name: copy code from repo to virtual machine
        uses: actions/checkout@v3

      # 2. download artifact
      - name: download artifact
        uses: actions/download-artifact@master
        with: 
          name: dist
          path: dist

      - run: cd dist & ls

      # 3. deploy to firebase
      - name: deploy to firebase
        uses: w9jds/firebase-action@master
        with: 
          args: deploy --only hosting
        env: 
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      # 4. show successful signals
      - run: echo "Built and deployed successfully !"
